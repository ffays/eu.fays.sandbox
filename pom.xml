<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>


	<groupId>eu.fays</groupId>
	<artifactId>eu.fays.sandbox</artifactId>
	<version>1.0.0</version>

	<packaging>jar</packaging>

	<properties>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>dd MMM yyyy HH:mm:ss</maven.build.timestamp.format>
		<adoptium.jre.x64.windows.zip>OpenJDK17U-jre_x64_windows_hotspot_17.0.11_9.zip</adoptium.jre.x64.windows.zip>
		<adoptium.jre.folder.name>jdk-17.0.11+9-jre</adoptium.jre.folder.name>
	<!--  
		<maven-surefire-report-plugin.version>3.0.0-M5</maven-surefire-report-plugin.version>
	-->
		<junit.version>5.10.2</junit.version>
		<maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
		<maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
		<maven-jar-plugin.version>3.4.1</maven-jar-plugin.version>
		<buildnumber-maven-plugin.version>3.2.0</buildnumber-maven-plugin.version>
	</properties>
	
	<scm>
		<connection>scm:git://github.com:ffays/eu.fays.sandbox.git</connection>
		<url>https://github.com/ffays/eu.fays.sandbox</url>
	</scm>

	<!--  
	<repositories>
		<repository>
			<id></id>
			<name></name>
			<url></url>
		</repository>
	</repositories>
	-->
	
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
				<!-- https://maven.apache.org/surefire/maven-surefire-plugin/usage.html -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-antrun-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin.version}</version>
				<executions>
					<execution>
						<id>echo-properties</id>
						<!-- "pre-integration-test" phase can be used as "post-package" phase (not-existing in Maven Build Lifecycle) -->
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echoproperties />
							</target>
						</configuration>
					</execution>				
				</executions>
			</plugin>
			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Version>${project.version}.${buildNumber}</Implementation-Version>
							<Java-VM-Version>${java.vm.version} (${java.vm.vendor})</Java-VM-Version>
							<Software-Version>${project.version}</Software-Version>
							<Built-By>${user.name}</Built-By>
							<Built-Date>${timestamp}</Built-Date>
						</manifestEntries>
					</archive>
				</configuration>
    		</plugin>
			<!-- https://mvnrepository.com/artifact/org.apache.maven/maven-plugin-api -->
			<plugin>
				<!-- plugin used to extract the git hash and store it in ${buildNumber} -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>${buildnumber-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
					<!-- place a lower number if you want shorter commit numbers in the archive filenames -->
					<shortRevisionLength>40</shortRevisionLength>
				</configuration>
			</plugin>    		
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>unzip-adoptium-jre-x64-windows</id>
			<activation>
				<file>
					<exists>${user.home}/Downloads/${adoptium.jre.x64.windows.zip}</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
						<executions>
							<execution>
								<id>unzip-adoptium-jre</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo message="(cd ${project.build.directory}; unzip ${user.home}/Downloads/${adoptium.jre.x64.windows.zip})" level="info" />
										<unzip src="${user.home}/Downloads/${adoptium.jre.x64.windows.zip}" dest="${project.build.directory}" />
										<echo message="mv ${project.build.directory}/${adoptium.jre.folder.name} ${project.build.directory}/jre" level="info" />
										<move file="${project.build.directory}/${adoptium.jre.folder.name}" tofile="${project.build.directory}/jre"/>
									</target>
								</configuration>
							</execution>					
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
<description><![CDATA[
# Regular build
mvn -Djava.util.logging.config.file=logging.properties clean package

# Print dependency tree
mvn dependency:tree -Dverbose
]]></description>	
</project>